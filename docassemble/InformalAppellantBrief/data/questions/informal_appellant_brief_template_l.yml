---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALMassachusetts:al_massachusetts.yml
---
metadata:
  title: >-
    Informal Appellant Brief
  short title: >-
    Informal Appellant Brief
  description: |-
    This interview helps someone in Massachusetts complete an Informal Appellant Brief.
  tags:
    - "CO-03-00-00-00"
  authors:
    - Suffolk University LIT Clinic
  help_page_url: >-
    https://www.mass.gov/info-details/appeals-court-informal-brief-pilot-program
  help_page_title: >-
    Appeals Court
  allowed_courts: 
    - "Appeals Court"
  typical_role: "plaintiff"
  al_weaver_version: "1.10.2"
  generated_on: "2023-11-02"
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-InformalAppellantBriefTemplateL'
---
code: |
  interview_short_title = "Complete an Appellant Brief"
---
code: |
  al_form_type = "appeal" 
---
objects:
  - other_parties: ALPeopleList.using(there_are_any=True)
  - users: ALPeopleList.using(there_are_any=True)
---
sections:
  - review_informal_appellant_brief_template_l: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_informal_appellant_brief_template_l
code: |
  # Set the allowed courts for this interview
  allowed_courts = ['Appeals Court']
  nav.set_section("review_informal_appellant_brief_template_l")
  user_role = "plaintiff"
  user_ask_role = "plaintiff"
  users.gather()
  set_parts(subtitle=str(users))
  date
  Lower_Court
  set_progress(14)
  issues_on_appeal
  case_history
  statement_of_facts
  set_progress(28)
  argument
  conclusion
  users[0].email
  set_progress(42)
  defendants.gather()
  plaintiffs.gather()
  docket_number
  set_progress(56)
  other_parties.gather()
  other_parties[0].address.address
  users[0].address.address
  interview_order_informal_appellant_brief_template_l = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  informal_appellant_brief_template_l_intro
  interview_order_informal_appellant_brief_template_l
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  informal_appellant_brief_template_l_download
---
comment: |
  This question is used to introduce your interview. Please customize
id: Informal_Appellant_Brief
continue button field: informal_appellant_brief_template_l_intro
question: |
  Informal Appellant Brief
subquestion: |
  This interview will help you complete an Appellant Brief.
  
  Before you get started, please gather all documents from your lower court case, including all documents filed with the court.
  
  
  
  When you are finished, you will need to:
  
  1. File a record appendix
  2. 
  
  Most people take about _______ minutes to finish this interview.
---
id: Background Information
question: |
  Background Information
subquestion: |
  Basic information about you.
fields:
  - "Today's Date": date
    datatype: date
  - "Your Pronouns": users.pronouns
    input type: dropdown
    choices:
      - He/Him
      - She/Her
      - Other
---
id: Case Background
question: |
  Case Background
fields:
  - "Lower Court Name": Lower_Court
---
id: Issues on Appeal
question: |
  Issues on Appeal
subquestion: |
  Describe the specific legal issue(s) from your lower court case that you are appealing.
fields:
  - "Issues on Appeal": issues_on_appeal
---
id: Case History
question: |
  Case History
subquestion: |
  Describe the different legal stages of your case leading to this appeal.
fields:
  - "Case History": case_history
---
id: Statement of the Facts
question: |
  Statement of the Facts
subquestion: |
  Describe in detail the material facts of your situation which led to the initial lower court case.
fields:
  - "Statement of Facts": statement_of_facts
---
id: Argument
question: |
  Argument
subquestion: |
  Lay out your legal argument supporting your position on the legal issue(s) you are appealing on.
fields:
  - "Argument": argument
---
id: Conclusion
question: |
  Conclusion
subquestion: |
  Briefly summarize the main points of your argument, and describe in detail the specific relief you are requesting from the Appeals Court
fields:
  - "Conclusion": conclusion
---
id: preview informal_appellant_brief_template_l
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_informal_appellant_brief_template_l'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: informal_appellant_brief_template_l_preview_question    
---
code: |
  signature_fields = ['users[0].signature']
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---
id: informal appellant brief template l review screen
event: review_informal_appellant_brief_template_l
question: |
  Review your answers
review:
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: argument
    button: |
      **Argument**:
      ${ argument }
  - Edit: conclusion
    button: |
      **Conclusion**:
      ${ conclusion }
  - Edit: defendants.revisit
    button: |
      **Defendants**

      % for item in defendants:
        * ${ item }
      % endfor
  - Edit: plaintiffs.revisit
    button: |
      **Plaintiffs**

      % for item in plaintiffs:
        * ${ item }
      % endfor
  - Edit: Lower_Court
    button: |
      **Lower Court Name**:
      ${ Lower_Court }
  - Edit: issues_on_appeal
    button: |
      **Issues on Appeal**:
      ${ issues_on_appeal }
  - Edit: case_history
    button: |
      **Case History**:
      ${ case_history }
  - Edit: statement_of_facts
    button: |
      **Statement of Facts**:
      ${ statement_of_facts }
  - Edit: date
    button: |
      **Today's Date**:
      ${ date }
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
  - Edit: other_parties.revisit
    button: |
      **Other parties**

      % for item in other_parties:
        * ${ item }
      % endfor
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Pronouns: |
      row_item.pronouns if defined("row_item.pronouns") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
edit:
  - signature
  - email
  - name.first
  - pronouns
  - address.address
confirm: True

---
continue button field: defendants.revisit
question: |
  Edit defendants
subquestion: |
  ${ defendants.table }

  ${ defendants.add_action() }
---
table: defendants.table
rows: defendants
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: plaintiffs.revisit
question: |
  Edit plaintiffs
subquestion: |
  ${ plaintiffs.table }

  ${ plaintiffs.add_action() }
---
table: plaintiffs.table
rows: plaintiffs
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: other_parties.revisit
question: |
  Edit other_parties
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
edit:
  - name.first
  - address.address
confirm: True

---
id: download informal_appellant_brief_template_l
event: informal_appellant_brief_template_l_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_informal_appellant_brief_template_l'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=True) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - informal_appellant_brief_template_l_Post_interview_instructions: ALDocument.using(title="Instructions", filename="informal_appellant_brief_template_l_next_steps.docx", enabled=True, has_addendum=False)
  - informal_appellant_brief_template_l_attachment: ALDocument.using(title="Informal Appellant Brief", filename="informal_appellant_brief_template_l", enabled=True, has_addendum=False, )
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[informal_appellant_brief_template_l_Post_interview_instructions, informal_appellant_brief_template_l_attachment], filename="informal_appellant_brief_template_l", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[informal_appellant_brief_template_l_attachment],  filename="informal_appellant_brief_template_l", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: informal_appellant_brief_template_l_next_steps
  docx template file: informal_appellant_brief_template_l_next_steps.docx
  variable name: informal_appellant_brief_template_l_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: informal appellant brief template l
  filename: informal_appellant_brief_template_l
  variable name: informal_appellant_brief_template_l_attachment[i]
  skip undefined: True
  docx template file: informal_appellant_brief_template_l.docx
  tagged pdf: True



